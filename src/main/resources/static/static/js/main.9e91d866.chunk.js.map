{"version":3,"sources":["SecurityUtils/setJWTToken.js","actions/securityActions.js","actions/types.js","components/Layout/Header.js","actions/ProjectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Project/addProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","actions/BacklogActions.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","SecurityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["setJWTToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","type","payload","Header","this","props","window","location","href","headerElements","security","validToken","user","userIsAuthenticated","className","id","to","fullname","onClick","bind","userIsNotAuthenticated","data-toggle","data-target","Component","connect","state","createProject","project","history","a","post","push","console","log","response","data","ProjectItem","onDeleteClick","delete_Project","Project","projectIdentifier","projectName","description","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjectList","Projects","projects","map","key","get","res","addProject","onChange","e","setState","target","name","value","onSubmit","preventDefault","newProject","start_date","end_date","nextProps","error","classnames","placeholder","initialState","projectTasks","projectTask","booleanActionPayload","combineReducers","actions","filter","project_task","projectSequence","action","middleware","thunk","ReactDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","disabled","AddProjectTask","newProjectTask","summary","acceptableCriteria","status","priority","dueDate","addProjectTask","backlog_id","ProjectTask","pt_id","DeleteProjectTask","priorityString","priorityClass","Backlog","tasks","project_tasks_prop","todo","inProgress","done","i","length","ProjectBoard","GetBacklog","BoardContent","backlog","errors","projectNotFound","role","boardAlgorithm","UpdateProjectTask","UpdatedProjectTask","created_At","updated_At","Update_ProjectTask","GetProjectTask","create_At","patch","Landing","Register","newUser","username","password","confirmPassword","createUser","Login","LoginRequest","loginUser","setItem","decoded","jwt_decode","component","otherProps","render","jwt_token","jwtToken","decoded_token","currentTime","Date","now","exp","App","exact","path","projectBoard","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9e91d866.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from 'axios';\r\nimport {SET_CURRENT_USER} from './types'\r\n\r\nimport setJWTToken from \"../SecurityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\nexport const createUser=(newUser,history)=>async dispatch=>{\r\n    try{\r\n        await axios.post(`/api/User/register`,newUser);\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type:\"GET_ERRORS\",\r\n            payload:{}\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n    \r\n            type:\"GET_ERRORS\",\r\n            payload:err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginUser=(LoginRequest)=>async dispatch=>{\r\n    try {\r\n        // post => Login Request\r\n        const res = await axios.post(\"/api/User/login\", LoginRequest);\r\n        console.log(res)\r\n        // extract token from res.data\r\n        const { token } = res.data;\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        console.log(\"stored in local storage\")\r\n        // set our token in header ***\r\n        setJWTToken(token);\r\n        console.log(\"header is set\")\r\n        // decode token on React\r\n        const decoded = jwt_decode(token);\r\n        console.log(\"header is decoded\")\r\n        // dispatch to our securityReducer\r\n        dispatch({\r\n          type: SET_CURRENT_USER,\r\n          payload: decoded\r\n        });\r\n      }\r\n       catch (err) {\r\n           console.log(err)\r\n        dispatch({\r\n          type: \"GET_ERRORS\",\r\n          payload: err.response.data\r\n        });\r\n      }\r\n}\r\n\r\nexport const logout=()=>dispatch=>{\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type:SET_CURRENT_USER,\r\n        payload:{}\r\n    })\r\n}","export const getErrors=\"GET_ERRORS\";\r\nexport const getProjects=\"GET_PROJECTS\";\r\nexport const getProjectID=\"GET_PROJECT\";\r\nexport const deleteProject=\"DELETE_PROJECT\";\r\n\r\n//Types for backlog\r\nexport const getBacklog=\"GET_BACKLOG\";\r\nexport const getProjectTask=\"GET_PROJECT_TASK\";\r\nexport const deleteProjectTask=\"DELETE_PROJECT_TASK\";\r\nexport const updatePT=\"UPDATE_PROJECT_TASK\"\r\n\r\nexport const SET_CURRENT_USER=\"SET_CURRENT_USER\";\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from\"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport {logout} from \"../../actions/securityActions\"\r\nclass Header extends Component {\r\n\r\n    logout(){\r\n      this.props.logout();\r\n      window.location.href=\"/\";\r\n    }\r\n\r\n    render() {\r\n\r\n      const {validToken,user}=this.props.security;\r\n\r\n      const userIsAuthenticated=(<div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to={\"/dashboard\"}>\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link \" to={\"/dashboard\"}>\r\n          <i className=\"fa fa-user-circle-o\" /> {user.fullname}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to={\"/logout\"}\r\n          onClick={this.logout.bind(this)}>\r\n            Logout\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>);\r\n\r\n      const userIsNotAuthenticated=(<ul className=\"navbar-nav ml-auto\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link \" to={\"/register\"}>\r\n          Sign Up\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to={\"/login\"}>\r\n          Login\r\n        </Link>\r\n      </li>\r\n    </ul>);\r\n\r\n    let headerElements;\r\n\r\n    if(validToken && user){\r\n      headerElements=userIsAuthenticated;\r\n    }\r\n    else{\r\n      headerElements=userIsNotAuthenticated;\r\n    }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div className=\"container\">\r\n              <Link className=\"navbar-brand\" to={\"/\"}>\r\n                Project Management Tool\r\n              </Link>\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#mobile-nav\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\" />\r\n              </button>\r\n    \r\n              {headerElements}\r\n            </div>\r\n          </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes={\r\n  logout:PropTypes.func.isRequired,\r\n  security:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n  security:state.security\r\n})\r\n\r\nexport default connect(mapStateToProps,{logout})(Header);","import axios from \"axios\";\r\nimport {getErrors,getProjects,getProjectID,deleteProject} from \"../actions/types\";\r\n\r\nexport const createProject=(project,history)=>async dispatch =>{\r\n    try{\r\n        await axios.post(\"/api/project/\",project);\r\n        history.push(\"/dashboard\");\r\n       \r\n        dispatch({\r\n    \r\n            type:\"GET_ERRORS\",\r\n            payload:{}\r\n        })\r\n    }\r\n    catch(err){\r\n        console.log(err.response.data);\r\n        dispatch({\r\n    \r\n            type:\"GET_ERRORS\",\r\n            payload:err.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const getProjectList=()=>async dispatch=>{\r\n    const res=await axios.get(\"/api/project/all\");\r\n    dispatch({\r\n        type:getProjects,\r\n        payload:res.data\r\n    })\r\n};\r\n\r\nexport const getProject=(id,history)=>async dispatch=>{\r\n   try\r\n    { const res=await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n        type:getProjectID,\r\n        payload:res.data\r\n    })}\r\ncatch(err){\r\n    history.push(\"/dashboard\")\r\n}\r\n};\r\n\r\nexport const delete_Project=id=>async dispatch=>{\r\n    if(window.confirm(\"Are you sure, You want to delete the Project?\")){\r\n        const res=await axios.delete(`/api/project/${id}`);\r\n        dispatch({\r\n            type:deleteProject,\r\n            payload:id\r\n        })\r\n    }\r\n    \r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {delete_Project} from \"../../actions/ProjectActions\"\r\nclass ProjectItem extends Component {\r\n    onDeleteClick=(id)=>{\r\n        this.props.delete_Project(id);\r\n    }\r\n    render() {\r\n        const Project=this.props.project;\r\n        return (\r\n           \r\n          \r\n             <div className=\"container\">\r\n                 <div className=\"card card-body bg-light mb-3\">\r\n                     <div className=\"row\">\r\n                         <div className=\"col-2\">\r\n                             <span className=\"mx-auto\">{Project.projectIdentifier}</span>\r\n                         </div>\r\n                         <div className=\"col-lg-6 col-md-4 col-8\">\r\n                             <h3>{Project.projectName}</h3>\r\n                             <p>{Project.description}</p>\r\n                         </div>\r\n                         <div className=\"col-md-4 d-none d-lg-block\">\r\n                             <ul className=\"list-group\">\r\n                                 <Link to={`/projectBoard/${Project.projectIdentifier}`}>\r\n                                     <li className=\"list-group-item board\">\r\n                                         <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                     </li>\r\n                                 </Link>\r\n                                 <Link to={`/UpdateProject/${Project.projectIdentifier}`}>\r\n                                     <li className=\"list-group-item update\">\r\n                                         <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                     </li>\r\n                                 </Link>\r\n                                 \r\n                                     <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this,Project.projectIdentifier)}>\r\n                                         <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                     </li>\r\n                                 \r\n                             </ul>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n            \r\n\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes={\r\n    delete_Project:propTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,{delete_Project})(ProjectItem);","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n const CreateProjectButton=()=> {\r\n    return (\r\n        <React.Fragment>\r\n        <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                    Create a Project\r\n                </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CreateProjectButton;","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem'\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport {getProjectList} from '../actions/ProjectActions'\r\nimport propTypes from 'prop-types';\r\n class Dashboard extends Component {\r\n     componentDidMount(){\r\n         this.props.getProjectList()\r\n     }\r\n    render() {\r\n        const Projects=this.props.project.projects;\r\n        return (\r\n            \r\n    <div className=\"projects\">\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <h1 className=\"display-4 text-center\">Projects</h1>\r\n                <br />\r\n                <CreateProjectButton/>\r\n                <br />\r\n                <hr />\r\n                {Projects.map(project=>(\r\n                    <ProjectItem key={project.id} project={project}/>\r\n                ))}\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes={\r\nproject:propTypes.object.isRequired,\r\ngetProjectList:propTypes.func.isRequired\r\n}\r\n\r\n\r\nconst mapSateToProp=(state)=>({\r\n    project:state.project\r\n})\r\n\r\nexport default connect(mapSateToProp,{getProjectList})(Dashboard);","import React, { Component } from 'react'\r\nimport PropTypes from\"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport {createProject} from \"../../actions/ProjectActions\"\r\nimport classnames from 'classnames';\r\n class addProject extends Component {\r\n     constructor(){\r\n         super()\r\n         this.state={\r\n            \"projectName\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"description\": \"\",\r\n            \"start_date\":\"\" ,\r\n            \"end_date\": \"\",\r\n            \"error\":{}\r\n         }\r\n\r\n         this.onChange=this.onChange.bind(this);\r\n         this.onSubmit=this.onSubmit.bind(this);\r\n     }\r\n\r\n     componentWillReceiveProps(nextProps){\r\n         if(nextProps.error){\r\n             this.setState({\"error\":nextProps.error});\r\n         }\r\n     }\r\n\r\n     onChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n\r\n     onSubmit=(e)=>{\r\n         e.preventDefault();\r\n         const newProject={\r\n            \"projectName\": this.state.projectName,\r\n            \"projectIdentifier\": this.state.projectIdentifier,\r\n            \"description\": this.state.description,\r\n            \"start_date\":this.state.start_date,\r\n            \"end_date\": this.state.end_date\r\n         }\r\n\r\n        this.props.createProject(newProject,this.props.history)\r\n     }\r\n\r\n    render() {\r\n        const {error} = this.state\r\n        return (\r\n            <div className=\"register\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                        <hr />\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.projectName})} placeholder=\"Project Name\" \r\n                                name=\"projectName\"  value={this.state.projectName} onChange={this.onChange}/>\r\n                                {error.projectName && (\r\n                                    <div className=\"invalid-feedback\">{error.projectName}</div>\r\n                                )}   \r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\"is-invalid\":error.projectIdentifier})} placeholder=\"Unique Project ID\"\r\n                                     name=\"projectIdentifier\" value={this.state.projectIdentifier} onChange={this.onChange}/>\r\n                                     {error.projectIdentifier && (\r\n                                        <div className=\"invalid-feedback\">{error.projectIdentifier}</div>\r\n                                    )} \r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <textarea className={classnames(\"form-control form-control-lg\",{\"is-invalid\":error.description})} placeholder=\"Project Description\" name=\"description\"\r\n                                value={this.state.description} onChange={this.onChange}></textarea>\r\n                                {error.description && (\r\n                                    <div className=\"invalid-feedback\">{error.description}</div>\r\n                                )} \r\n                            </div>\r\n                            \r\n                            <h6>Start Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\" \r\n                                 value={this.state.start_date} onChange={this.onChange}/>\r\n                            </div>\r\n                            <h6>Estimated End Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\"  \r\n                                value={this.state.end_date} onChange={this.onChange}/>\r\n                            </div>\r\n    \r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"  />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\naddProject.propTypes={\r\n    createProject:PropTypes.func.isRequired,\r\n    error:PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps=state=>({\r\n    error:state.error\r\n});\r\nexport default connect(mapStateToProps,{createProject})(addProject);","import {getErrors} from \"../actions/types\";\r\nconst initialState={}\r\nexport default function(state=initialState,actions){\r\nswitch(actions.type){\r\n    case getErrors:\r\n        return actions.payload;\r\n    default:\r\n        return state;\r\n}\r\n}\r\n","import {getProjects, getProjectID, deleteProject} from \"../actions/types\";\r\nconst initialState={\r\n    projects:[],\r\n    project:{}\r\n    }\r\n    export default function(state=initialState,actions){\r\n        switch(actions.type){\r\n            case getProjects:\r\n                return {\r\n                    ...state,\r\n                    projects:actions.payload\r\n                }\r\n            case getProjectID:\r\n                return{\r\n                    ...state,\r\n                    project:actions.payload\r\n                }\r\n            case deleteProject:\r\n                return {\r\n                    ...state,\r\n                    projects:state.projects.filter(project=>project.projectIdentifier!==actions.payload)\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }","import {getProjectTask,getBacklog,deleteProjectTask} from '../actions/types'\r\n\r\nconst initialState={\r\n    projectTasks:[],\r\n    projectTask:{}\r\n    }\r\n    export default function(state=initialState,actions){\r\n        switch(actions.type){\r\n            case getBacklog:\r\n                console.log(actions.payload)\r\n                return {\r\n                    ...state,\r\n                    projectTasks:actions.payload\r\n                }\r\n            case getProjectTask:\r\n                return{\r\n                    ...state,\r\n                    projectTask:actions.payload\r\n                }\r\n            case deleteProjectTask:\r\n                return {\r\n                    ...state,\r\n                    projectTasks: state.projectTasks.filter(\r\n                        project_task => project_task.projectSequence !== actions.payload\r\n                      )\r\n                     }\r\n            default:\r\n                return state;\r\n        }\r\n    }","import {SET_CURRENT_USER} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    validToken: false,\r\n    user: {}\r\n  };\r\n  \r\n  const booleanActionPayload = payload => {\r\n    if (payload) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          validToken: booleanActionPayload(action.payload),\r\n          user: action.payload\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import {combineReducers} from 'redux';\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\nexport default combineReducers({\r\n    \"error\":errorReducer,\r\n    \"project\":projectReducer,\r\n    \"backlog\":backlogReducer,\r\n    \"security\":securityReducer\r\n});","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState={}\r\nconst middleware=[thunk]\r\n\r\nlet store;\r\nconst ReactDevTools=window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactDevTools){\r\n    store= createStore(rootReducer,initialState, compose(applyMiddleware(...middleware),ReactDevTools));\r\n}\r\nelse{\r\n    store= createStore(rootReducer,initialState, compose(applyMiddleware(...middleware)));\r\n}\r\n\r\n\r\nexport default store;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getProject,createProject} from '../../actions/ProjectActions'\r\nimport propTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nclass UpdateProject extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            \"id\":\"\",\r\n            \"projectName\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"description\": \"\",\r\n            \"start_date\":\"\" ,\r\n            \"end_date\": \"\",\r\n            \"error\":{}\r\n        }\r\n        this.onChange=this.onChange.bind(this);\r\n         this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n      if(nextProps.error){\r\n        this.setState({\"error\":nextProps.error});\r\n    }\r\n        const {id,projectName,projectIdentifier,description,start_date,end_date}=nextProps.project;\r\n        this.setState({\r\n            id,projectName,projectIdentifier,description,start_date,end_date\r\n        })\r\n    }\r\n\r\n    onChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n\r\n\r\n     onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const newProject={\r\n            \"id\":this.state.id,\r\n           \"projectName\": this.state.projectName,\r\n           \"projectIdentifier\": this.state.projectIdentifier,\r\n           \"description\": this.state.description,\r\n           \"start_date\":this.state.start_date,\r\n           \"end_date\": this.state.end_date\r\n        }\r\n\r\n       this.props.createProject(newProject,this.props.history)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id}= this.props.match.params;\r\n        this.props.getProject(id,this.props.history);\r\n    }\r\n    render() {\r\n      const {error} = this.state\r\n        return (\r\n            <div className=\"project\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                  <hr />\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.projectName})}\r\n                        placeholder=\"Project Name\"\r\n                        name=\"projectName\"\r\n                        value={this.state.projectName}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {error.projectName && (\r\n                        <div className=\"invalid-feedback\">{error.projectName}</div>\r\n                    )} \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Unique Project ID\"\r\n                        name=\"projectIdentifier\"\r\n                        value={this.state.projectIdentifier}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <textarea\r\n                        className={classnames(\"form-control form-control-lg\",{\"is-invalid\":error.description})}\r\n                        placeholder=\"Project Description\"\r\n                        name=\"description\"\r\n                        value={this.state.description}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {error.description && (\r\n                        <div className=\"invalid-feedback\">{error.description}</div>\r\n                    )}\r\n                    </div>\r\n                    <h6>Start Date</h6>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control form-control-lg\"\r\n                        name=\"start_date\"\r\n                        value={this.state.start_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <h6>Estimated End Date</h6>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control form-control-lg\"\r\n                        name=\"end_date\"\r\n                        value={this.state.end_date}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n    \r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-block mt-4\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes={\r\n    getProject:propTypes.func.isRequired,\r\n    project:propTypes.object.isRequired,\r\n    createProject:propTypes.func.isRequired,\r\n    error:propTypes.object.isRequired\r\n    }\r\n\r\n    const mapSateToProp=(state)=>({\r\n        project:state.project.project,\r\n        error:state.error\r\n    })\r\n\r\nexport default connect(mapSateToProp,{getProject,createProject}) (UpdateProject);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { addProjectTask } from '../../../actions/BacklogActions';\r\n\r\n class AddProjectTask extends Component {\r\n     constructor(props){\r\n        super(props);\r\n        const {id}=this.props.match.params;\r\n\r\n        this.state={\r\n            \"summary\": \"\",\r\n            \"acceptableCriteria\": \"\",\r\n            \"status\": \"\",\r\n            \"priority\": 0,\r\n            \"dueDate\": null,\r\n            \"projectIdentifier\":id,\r\n            \"error\":{}\r\n        }\r\n\r\n        this.onChange=this.onChange.bind(this);\r\n         this.onSubmit=this.onSubmit.bind(this);\r\n     }\r\n     \r\n     componentWillReceiveProps(nextProps){\r\n        if(nextProps.error){\r\n            this.setState({\"error\":nextProps.error});\r\n        }\r\n    }\r\n     onChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n\r\n     onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const newProjectTask={\r\n            \"summary\":this.state.summary,\r\n            \"acceptableCriteria\": this.state.acceptableCriteria,\r\n            \"status\": this.state.status,\r\n            \"priority\": this.state.priority,\r\n            \"dueDate\": this.state.dueDate\r\n        }\r\n        console.log(newProjectTask)\r\n       this.props.addProjectTask(this.state.projectIdentifier,newProjectTask,this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const {id}=this.props.match.params;\r\n        const {error} = this.state\r\n        return (\r\n            \r\n    <div className=\"add-PBI\">\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n                <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                    Back to Project Board\r\n                </Link>\r\n                <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.summary})} name=\"summary\" placeholder=\"Project Task summary\" \r\n                        value={this.state.summary} onChange={this.onChange}/>\r\n                        {error.summary && (\r\n                            <div className=\"invalid-feedback\">{error.summary}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptableCriteria\"\r\n                        value={this.state.acceptableCriteria} onChange={this.onChange}></textarea>\r\n                    </div>\r\n                    <h6>Due Date</h6>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select className=\"form-control form-control-lg\" name=\"priority\"  value={this.state.priority} onChange={this.onChange}>\r\n                            <option value={0}>Select Priority</option>\r\n                            <option value={1}>High</option>\r\n                            <option value={2}>Medium</option>\r\n                            <option value={3}>Low</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                            <option value=\"\">Select Status</option>\r\n                            <option value=\"TO_DO\">TO DO</option>\r\n                            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                            <option value=\"DONE\">DONE</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes={\r\n    addProjectTask:PropTypes.func.isRequired,\r\n    error:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps=state=>({\r\n    error:state.error\r\n});\r\n\r\nexport default connect(mapStateToProps,{addProjectTask})(AddProjectTask);","import axios from \"axios\";\r\nimport {getProjectTask,getBacklog,deleteProjectTask,getErrors,updatePT} from '../actions/types';\r\n\r\nexport const addProjectTask=(backlog_id,project_task,history)=>async dispatch=>{\r\n\r\n   try\r\n   {\r\n        await axios.post(`/api/backlog/${backlog_id}`,project_task);\r\n    history.push(`/projectBoard/${backlog_id}`)\r\n    dispatch({\r\n    \r\n        type:\"GET_ERRORS\",\r\n        payload:{}\r\n    })\r\n}\r\ncatch(err){\r\n    console.log(err.response.data);\r\n    dispatch({\r\n\r\n        type:\"GET_ERRORS\",\r\n        payload:err.response.data\r\n    })\r\n}\r\n};\r\n\r\nexport const GetBacklog = (backlog_id) => async dispatch => {\r\n    console.log(\"Entered the action\")\r\n    try {\r\n        console.log(backlog_id)\r\n      const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n      dispatch({\r\n        type: getBacklog,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: getErrors,\r\n            payload: err.response.data\r\n          });\r\n    }\r\n  };\r\n\r\n  export const GetProjectTask=(backlog_id,pt_id,history)=>async dispatch=>{\r\n    try{\r\n      const res=await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n          type:getProjectTask,\r\n          payload:res.data\r\n      })\r\n    }\r\n    catch(err){\r\n      history.push(\"/dashboard\")\r\n    }\r\n  };\r\n\r\n  export const Update_ProjectTask=(backlog_id,pt_id,project_task,history)=>async dispatch=>{\r\n    try{\r\n      const res= await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`,project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n    \r\n        type:\"GET_ERRORS\",\r\n        payload:{}\r\n    })\r\n    }\r\n    catch(err){\r\n      dispatch({\r\n        type: getErrors,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  }\r\n\r\n  export const DeleteProjectTask=(backlog_id,pt_id,history)=>async dispatch=>{\r\n    if(window.confirm(\"Are you sure, You want to delete the Project?\")){\r\n      const res=await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n          type:deleteProjectTask,\r\n          payload:pt_id\r\n      })\r\n  }\r\n  }","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {DeleteProjectTask} from '../../../actions/BacklogActions'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.DeleteProjectTask(backlog_id, pt_id);\r\n  }\r\n    render() {\r\n      const {project_task}=this.props \r\n      let priorityString;\r\n      let priorityClass;\r\n      if(project_task.priority===1){\r\n        priorityClass=\"bg-danger text-light\"\r\n        priorityString=\"HIGH\"\r\n      }\r\n      if(project_task.priority===2){\r\n        priorityClass=\"bg-warning text-light\"\r\n        priorityString=\"MEDIUM\"\r\n      }\r\n      if(project_task.priority===3){\r\n        priorityClass=\"bg-info text-light\"\r\n        priorityString=\"LOW\"\r\n      }\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n            <div className={`card-header text-primary ${priorityClass}`}>\r\n              ID: {project_task.projectSequence} -- Priority:{priorityString} \r\n              \r\n            </div>\r\n            <div className=\"card-body bg-light\">\r\n              <h5 className=\"card-title\">{project_task.summary}</h5>\r\n              <p className=\"card-text text-truncate \">\r\n               { project_task.acceptableCriteria}\r\n              </p>\r\n              <Link to={`/UpdateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                View / Update\r\n              </Link>\r\n    \r\n              <button className=\"btn btn-danger ml-4\"    onClick={this.onDeleteClick.bind(\r\n                this,\r\n                project_task.projectIdentifier,\r\n                project_task.projectSequence\r\n              )}>Delete</button>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nProjectTask.propTypes = {\r\n  DeleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { DeleteProjectTask }\r\n)(ProjectTask);","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const { project_tasks_prop } = this.props;\r\n\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n          <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n        let todo=[]\r\n        let inProgress=[]\r\n        let done=[]\r\n        for(let i=0;i<tasks.length;i++){\r\n            if(tasks[i].props.project_task.status==\"TO_DO\"){\r\n                todo.push(tasks[i]);\r\n            }\r\n            if(tasks[i].props.project_task.status==\"IN_PROGRESS\"){\r\n                inProgress.push(tasks[i]);\r\n            }\r\n            if(tasks[i].props.project_task.status==\"DONE\"){\r\n                done.push(tasks[i]);\r\n            }\r\n        }\r\n        return (\r\n\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-secondary text-white\">\r\n                    <h3>TO DO</h3>\r\n                  </div>\r\n                </div>\r\n                {todo}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-primary text-white\">\r\n                    <h3>In Progress</h3>\r\n                  </div>\r\n                </div>\r\n                {inProgress}\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card text-center mb-2\">\r\n                  <div className=\"card-header bg-success text-white\">\r\n                    <h3>Done</h3>\r\n                  </div>\r\n                </div>\r\n                {done}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Backlog;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\nimport {GetBacklog} from '../../actions/BacklogActions'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n class ProjectBoard extends Component {\r\n    constructor(){\r\n       super();\r\n       this.state={\r\n           \"errors\":{}\r\n       } \r\n\r\n    }   \r\n    componentDidMount(){\r\n        const {id}=this.props.match.params;\r\n        this.props.GetBacklog(id)\r\n    }\r\ncomponentWillReceiveProps(nextProps){\r\n    if(nextProps.error){\r\n        this.setState({\"error\":nextProps.error});\r\n    }\r\n}\r\n\r\n    render() {\r\n        const {id}=this.props.match.params;\r\n        const {projectTasks}=this.props.backlog;\r\n        const {errors}=this.state\r\n\r\n        let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, projectTasks) => {\r\n      if (projectTasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } \r\n        if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } \r\n\r\n        else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog  project_tasks_prop={projectTasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, projectTasks);\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n            <i className=\"fa fa-plus-square\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes={\r\n    backlog:PropTypes.object.isRequired,\r\n   GetBacklog:PropTypes.func.isRequired,\r\n   errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapSateToProp=(state)=>({\r\n    backlog:state.backlog,\r\n    errors:state.errors\r\n})\r\nexport default connect(mapSateToProp,{GetBacklog})(ProjectBoard);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {GetProjectTask,Update_ProjectTask} from '../../../actions/BacklogActions'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n class UpdateProjectTask extends Component {\r\n     constructor(){\r\n         super();\r\n         this.state={\r\n             \"id\":\"\",\r\n            \"projectSequence\":\"\",\r\n            \"summary\":\"\",\r\n            \"acceptableCriteria\":\"\",\r\n            \"status\":\"\",\r\n            \"projectIdentifier\":\"\",\r\n            \"priority\":\"\",\r\n            \"dueDate\":\"\",\r\n            \"created_At\":\"\",\r\n            \"updated_At\":\"\",\r\n            \"error\":{}\r\n         }\r\n         this.onChange=this.onChange.bind(this);\r\n         this.onSubmit=this.onSubmit.bind(this);\r\n     }\r\n\r\n     componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        this.props.GetProjectTask(backlog_id, pt_id, this.props.history);\r\n      };\r\n    \r\n      componentWillReceiveProps(nextProps) {\r\n        if(nextProps.error){\r\n            this.setState({\"error\":nextProps.error});\r\n        }\r\n        const {\r\n          id,\r\n          projectSequence,\r\n          summary,\r\n          acceptableCriteria,\r\n          status,\r\n          priority,\r\n          dueDate,\r\n          projectIdentifier,\r\n          create_At\r\n        } = nextProps.projectTask;\r\n    \r\n        this.setState({\r\n          id,\r\n          projectSequence,\r\n          summary,\r\n          acceptableCriteria,\r\n          status,\r\n          priority,\r\n          dueDate,\r\n          projectIdentifier,\r\n          create_At\r\n        });\r\n        \r\n      };\r\n    \r\n     onChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n\r\n     onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const UpdatedProjectTask={\r\n            \"id\":this.state.id,\r\n            \"projectSequence\":this.state.projectSequence,\r\n            \"summary\":this.state.summary,\r\n            \"acceptableCriteria\":this.state.acceptableCriteria,\r\n            \"status\":this.state.status,\r\n            \"projectIdentifier\":this.state.projectIdentifier,\r\n            \"priority\":this.state.priority,\r\n            \"dueDate\":this.state.dueDate,\r\n            \"created_At\":this.state.created_At,\r\n            \"updated_At\":this.state.updated_At\r\n        }\r\n\r\n        this.props.Update_ProjectTask(this.state.projectIdentifier,this.state.projectSequence,UpdatedProjectTask,this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {backlog_id,pt_id}=this.props.match.params;\r\n        const {error}= this.state\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${backlog_id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.summary})}\r\n                            name=\"summary\" value={this.state.summary} \r\n                            placeholder=\"Project Task summary\" onChange={this.onChange}/>\r\n                            {error.summary && (\r\n                                <div className=\"invalid-feedback\">{error.summary}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" \r\n                            value={this.state.acceptableCriteria} name=\"acceptanceCriteria\" \r\n                            onChange={this.onChange}></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange}>\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes={\r\n    GetProjectTask:PropTypes.func.isRequired,\r\n    projectTask:PropTypes.object.isRequired,\r\n    Update_ProjectTask:PropTypes.func.isRequired,\r\n    error:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapSateToProp=(state)=>({\r\n    projectTask:state.backlog.projectTask,\r\n    error:state.error\r\n})\r\n\r\nexport default connect(mapSateToProp,{GetProjectTask,Update_ProjectTask})(UpdateProjectTask);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from\"prop-types\"\r\nimport {connect} from \"react-redux\"\r\n class Landing extends Component {\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                        <p className=\"lead\">\r\n                            Create your account to join active projects or start your own\r\n                        </p>\r\n                        <hr />\r\n                        <Link to={\"/register\"} className=\"btn btn-lg btn-primary mr-2\">\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to={\"/login\"} className=\"btn btn-lg btn-secondary mr-2\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes={\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    \r\n    security:state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react'\r\nimport PropTypes from\"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport {createUser} from \"../../actions/securityActions\"\r\nimport classnames from 'classnames';\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            \"username\": \"\",\r\n            \"fullname\": \"\",\r\n            \"password\": \"\",    \r\n            \"confirmPassword\":\"\",\r\n            \"error\":{}\r\n        }\r\n\r\n        this.onChange=this.onChange.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    onChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n\r\n     onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const newUser={\r\n            \"username\": this.state.username,\r\n            \"fullname\": this.state.fullname,\r\n            \"password\": this.state.password,    \r\n            \"confirmPassword\":this.state.confirmPassword\r\n        }\r\n\r\n       this.props.createUser(newUser,this.props.history)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.error){\r\n            this.setState({\"error\":nextProps.error});\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n    render() {\r\n        const {error} = this.state\r\n\r\n        return (\r\n            \r\n            <div className=\"register\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                        <p className=\"lead text-center\">Create your Account</p>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.fullname})} placeholder=\"Name\" name=\"fullname\"\r\n                                value={this.state.fullname} onChange={this.onChange}  />\r\n                                {error.fullname && (\r\n                                    <div className=\"invalid-feedback\">{error.fullname}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.username})} placeholder=\"Email Address (Username)\" \r\n                                name=\"username\" value={this.state.username} onChange={this.onChange} />\r\n                                {error.username && (\r\n                                    <div className=\"invalid-feedback\">{error.username}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.password})} placeholder=\"Password\" \r\n                                name=\"password\" value={this.state.password} onChange={this.onChange} />\r\n                                {error.password && (\r\n                                    <div className=\"invalid-feedback\">{error.password}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.confirmPassword})} placeholder=\"Confirm Password\"\r\n                                    name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onChange} />\r\n                                    {error.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{error.confirmPassword}</div>\r\n                                    )}\r\n                                    </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes={\r\n    createUser:PropTypes.func.isRequired,\r\n    error:PropTypes.object.isRequired,\r\n    security:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps=state=>({\r\n    error:state.error,\r\n    security:state.security\r\n});\r\nexport default connect(mapStateToProps,{createUser})(Register);","import React, { Component } from 'react'\r\nimport PropTypes from\"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport {loginUser} from \"../../actions/securityActions\"\r\nimport classnames from 'classnames';\r\nclass Login extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            \"username\": \"\",\r\n            \"password\": \"\",    \r\n            \"error\":{}\r\n        }\r\n\r\n        this.onChange=this.onChange.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        const LoginRequest={\r\n            \"username\": this.state.username,\r\n            \"password\": this.state.password,    \r\n        }\r\n\r\n       this.props.loginUser(LoginRequest)\r\n    }\r\n\r\n    onChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n\r\n     componentDidMount(){\r\n         if(this.props.security.validToken){\r\n             this.props.history.push(\"/dashboard\")\r\n         }\r\n     }\r\n\r\n     componentWillReceiveProps(nextProps){\r\n        if(nextProps.error){\r\n            this.setState({\"error\":nextProps.error});\r\n        }\r\n         if(nextProps.security.validToken){\r\n             this.props.history.push(\"/dashboard\");\r\n         }\r\n         \r\n     }\r\n\r\n    render() {\r\n        const {error} = this.state\r\n        return (\r\n            <div className=\"login\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Log In</h1>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.username})} placeholder=\"Email Address\" name=\"username\" \r\n                                value={this.state.username} onChange={this.onChange} />\r\n                                {error.username && (\r\n                                    <div className=\"invalid-feedback\">{error.username}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg \",{\"is-invalid\":error.password})} placeholder=\"Password\" name=\"password\" \r\n                                value={this.state.password} onChange={this.onChange} />\r\n                                {error.password && (\r\n                                    <div className=\"invalid-feedback\">{error.password}</div>\r\n                                )}\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes={\r\n    loginUser:PropTypes.func.isRequired,\r\n    error:PropTypes.object.isRequired,\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    error:state.error,\r\n    security:state.security\r\n});\r\n\r\nexport default connect(mapStateToProps,{loginUser})(Login);","import PropTypes from\"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nconst SecureRoute=({component:Component,security,...otherProps})=>(\r\n<Route {...otherProps} render={props=>\r\nsecurity.validToken?(<Component {...props} />):\r\n    <Redirect to=\"/login\" />\r\n} />\r\n);\r\n\r\nSecureRoute.propTypes={\r\n    security:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStatetoProps=state=>({\r\nsecurity:state.security\r\n})\r\n\r\nexport default connect(mapStatetoProps)(SecureRoute);\r\n","import React from 'react';\n\nimport './App.css';\nimport Header from './components/Layout/Header';\nimport Dashboard from './components/Dashboard';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router,Route, Switch} from 'react-router-dom';\nimport addProject from './components/Project/addProject';\nimport {Provider} from 'react-redux';\nimport store from \"./store\";\nimport UpdateProject from './components/Project/UpdateProject';\n\nimport { StickyContainer, Sticky } from 'react-sticky';\n\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport projectBoard from './components/ProjectBoard/ProjectBoard';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport setJWTToken from './SecurityUtils/setJWTToken';\nimport jwt_decode from \"jwt-decode\"\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecureRoute from './SecurityUtils/SecureRoute';\n\nconst jwt_token=localStorage.jwtToken;\nconsole.log(jwt_token)\nif(jwt_token){\n  setJWTToken(jwt_token);\n  const decoded_token=jwt_decode(jwt_token)\n  store.dispatch({\n    type:SET_CURRENT_USER,\n    payload:decoded_token\n  })\n\nconst currentTime=Date.now()/1000;\nif(decoded_token.exp<currentTime){\n  store.dispatch(logout());\n  window.location.href=\"/\";\n}\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <div className=\"App\">\n  \n      <Header/>\n   \n      <Route exact path=\"/\" component={Landing}/>  \n      <Route exact path=\"/register\" component={Register}/> \n      <Route exact path=\"/login\" component={Login}/>\n      <Switch>\n      <SecureRoute exact path=\"/dashboard\" component={Dashboard}/>\n      <SecureRoute exact path=\"/addProject\" component={addProject}/>\n      <SecureRoute exact path=\"/UpdateProject/:id\" component={UpdateProject}/>\n      <SecureRoute exact path=\"/projectBoard/:id\" component={projectBoard}/>\n      <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n      <SecureRoute exact path=\"/UpdateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\n    </Switch>\n      </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}